// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Planner {
  id        String   @id @default(uuid())
  name      String   @unique
  userId    String @unique
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id        String   @id @default(uuid())
  name      String
  planner   Planner  @relation(fields: [plannerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  status    TaskStatus @default(BACKLOG)
  priority  TaskPriority @default(HIGH)
  plannerId String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TaskStatus {
  BACKLOG
  PLANNING
  IN_PROGRESS
  PAUSED
  COMPLETED
  CANCELLED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}